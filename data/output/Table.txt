0 double s8
0 float s7
0 int s6
0 void s9
1 $ acc
1 double s8
1 float s7
1 int s6
1 void s9
2 $ r2
2 double r2
2 float r2
2 int r2
2 void r2
3 $ r3
3 double r3
3 float r3
3 int r3
3 void r3
4 $ r4
4 double r4
4 float r4
4 int r4
4 void r4
5 ID s11
6 ID r7
7 ID r8
8 ID r9
9 ID r10
10 $ r1
10 double r1
10 float r1
10 int r1
10 void r1
11 ( s14
11 ; s12
11 [ s13
12 $ r5
12 ( r5
12 ; r5
12 @ r5
12 ID r5
12 NUM r5
12 do r5
12 double r5
12 float r5
12 if r5
12 int r5
12 return r5
12 void r5
12 while r5
12 { r5
13 NUM s15
14 double s8
14 float s7
14 int s6
14 void s18
15 ] s21
16 ) s22
17 ) r12
17 , s23
18 ) r13
18 ID r10
19 ) r15
19 , r15
20 ID s24
21 ; s25
22 { s27
23 double s8
23 float s7
23 int s6
23 void s9
24 ) r16
24 , r16
24 [ s29
25 $ r6
25 ( r6
25 ; r6
25 @ r6
25 ID r6
25 NUM r6
25 do r6
25 double r6
25 float r6
25 if r6
25 int r6
25 return r6
25 void r6
25 while r6
25 { r6
26 $ r11
26 double r11
26 float r11
26 int r11
26 void r11
27 @ s31
28 ) r14
28 , r14
29 ] s32
30 @ s35
30 double s8
30 float s7
30 int s6
30 void s9
31 ( r20
31 ; r20
31 @ r20
31 ID r20
31 NUM r20
31 do r20
31 double r20
31 float r20
31 if r20
31 int r20
31 return r20
31 void r20
31 while r20
31 { r20
32 ) r17
32 , r17
33 ( s57
33 ; s46
33 ID s53
33 NUM s59
33 do s49
33 if s47
33 return s50
33 while s48
33 { s27
33 } s37
34 ( r19
34 ; r19
34 @ r19
34 ID r19
34 NUM r19
34 do r19
34 double r19
34 float r19
34 if r19
34 int r19
34 return r19
34 void r19
34 while r19
34 { r19
35 ( r22
35 ; r22
35 ID r22
35 NUM r22
35 do r22
35 if r22
35 return r22
35 while r22
35 { r22
35 } r22
36 ID s60
37 $ r18
37 ( r18
37 ; r18
37 ID r18
37 NUM r18
37 do r18
37 double r18
37 else r18
37 float r18
37 if r18
37 int r18
37 return r18
37 void r18
37 while r18
37 { r18
37 } r18
38 ( r21
38 ; r21
38 ID r21
38 NUM r21
38 do r21
38 if r21
38 return r21
38 while r21
38 { r21
38 } r21
39 ( r23
39 ; r23
39 ID r23
39 NUM r23
39 do r23
39 else r23
39 if r23
39 return r23
39 while r23
39 { r23
39 } r23
40 ( r24
40 ; r24
40 ID r24
40 NUM r24
40 do r24
40 else r24
40 if r24
40 return r24
40 while r24
40 { r24
40 } r24
41 ( r25
41 ; r25
41 ID r25
41 NUM r25
41 do r25
41 else r25
41 if r25
41 return r25
41 while r25
41 { r25
41 } r25
42 ( r26
42 ; r26
42 ID r26
42 NUM r26
42 do r26
42 else r26
42 if r26
42 return r26
42 while r26
42 { r26
42 } r26
43 ( r27
43 ; r27
43 ID r27
43 NUM r27
43 do r27
43 else r27
43 if r27
43 return r27
43 while r27
43 { r27
43 } r27
44 ( r28
44 ; r28
44 ID r28
44 NUM r28
44 do r28
44 else r28
44 if r28
44 return r28
44 while r28
44 { r28
44 } r28
45 ; s61
46 ( r30
46 ; r30
46 ID r30
46 NUM r30
46 do r30
46 else r30
46 if r30
46 return r30
46 while r30
46 { r30
46 } r30
47 ( s62
48 ( s63
49 ( s57
49 ; s46
49 ID s53
49 NUM s59
49 do s49
49 if s47
49 return s50
49 while s48
49 { s27
50 ( s57
50 ; s65
50 ID s53
50 NUM s59
51 != r60
51 % r60
51 ) r60
51 * r60
51 + r60
51 , r60
51 - r60
51 / r60
51 ; r60
51 < r60
51 <= r60
51 = s67
51 == r60
51 > r60
51 >= r60
51 ] r60
51 ^ r60
52 ) r38
52 , r38
52 ; r38
52 ] r38
53 != r39
53 % r39
53 ( s69
53 ) r39
53 * r39
53 + r39
53 , r39
53 - r39
53 / r39
53 ; r39
53 < r39
53 <= r39
53 = r39
53 == r39
53 > r39
53 >= r39
53 [ s68
53 ] r39
53 ^ r39
54 != s77
54 ) r42
54 + s78
54 , r42
54 - s79
54 ; r42
54 < s73
54 <= s72
54 == s76
54 > s74
54 >= s75
54 ] r42
55 != r50
55 % s83
55 ) r50
55 * s81
55 + r50
55 , r50
55 - r50
55 / s82
55 ; r50
55 < r50
55 <= r50
55 == r50
55 > r50
55 >= r50
55 ] r50
55 ^ s84
56 != r54
56 % r54
56 ) r54
56 * r54
56 + r54
56 , r54
56 - r54
56 / r54
56 ; r54
56 < r54
56 <= r54
56 == r54
56 > r54
56 >= r54
56 ] r54
56 ^ r54
57 ( s57
57 ID s53
57 NUM s59
58 != r61
58 % r61
58 ) r61
58 * r61
58 + r61
58 , r61
58 - r61
58 / r61
58 ; r61
58 < r61
58 <= r61
58 == r61
58 > r61
58 >= r61
58 ] r61
58 ^ r61
59 != r62
59 % r62
59 ) r62
59 * r62
59 + r62
59 , r62
59 - r62
59 / r62
59 ; r62
59 < r62
59 <= r62
59 == r62
59 > r62
59 >= r62
59 ] r62
59 ^ r62
60 ; s12
60 [ s13
61 ( r29
61 ; r29
61 ID r29
61 NUM r29
61 do r29
61 else r29
61 if r29
61 return r29
61 while r29
61 { r29
61 } r29
62 ( s57
62 ID s53
62 NUM s59
63 ( s57
63 ID s53
63 NUM s59
64 while s88
65 ( r35
65 ; r35
65 ID r35
65 NUM r35
65 do r35
65 else r35
65 if r35
65 return r35
65 while r35
65 { r35
65 } r35
66 ; s89
67 ( s57
67 ID s53
67 NUM s59
68 ( s57
68 ID s53
68 NUM s59
69 ( s57
69 @ s94
69 ID s53
69 NUM s59
70 ( s57
70 ID s53
70 NUM s59
71 ( s57
71 ID s53
71 NUM s59
72 ( r43
72 ID r43
72 NUM r43
73 ( r44
73 ID r44
73 NUM r44
74 ( r45
74 ID r45
74 NUM r45
75 ( r46
75 ID r46
75 NUM r46
76 ( r47
76 ID r47
76 NUM r47
77 ( r48
77 ID r48
77 NUM r48
78 ( r51
78 ID r51
78 NUM r51
79 ( r52
79 ID r52
79 NUM r52
80 ( s57
80 ID s53
80 NUM s59
81 ( r55
81 ID r55
81 NUM r55
82 ( r56
82 ID r56
82 NUM r56
83 ( r57
83 ID r57
83 NUM r57
84 ( r58
84 ID r58
84 NUM r58
85 ) s100
86 ) s101
87 ) s102
88 ( s103
89 ( r36
89 ; r36
89 ID r36
89 NUM r36
89 do r36
89 else r36
89 if r36
89 return r36
89 while r36
89 { r36
89 } r36
90 ) r37
90 , r37
90 ; r37
90 ] r37
91 ] s104
92 ) s105
93 ) r64
93 , s106
94 ) r65
95 ) r67
95 , r67
96 ) r41
96 + s78
96 , r41
96 - s79
96 ; r41
96 ] r41
97 != r60
97 % r60
97 ) r60
97 * r60
97 + r60
97 , r60
97 - r60
97 / r60
97 ; r60
97 < r60
97 <= r60
97 == r60
97 > r60
97 >= r60
97 ] r60
97 ^ r60
98 != r49
98 % s83
98 ) r49
98 * s81
98 + r49
98 , r49
98 - r49
98 / s82
98 ; r49
98 < r49
98 <= r49
98 == r49
98 > r49
98 >= r49
98 ] r49
98 ^ s84
99 != r53
99 % r53
99 ) r53
99 * r53
99 + r53
99 , r53
99 - r53
99 / r53
99 ; r53
99 < r53
99 <= r53
99 == r53
99 > r53
99 >= r53
99 ] r53
99 ^ r53
100 != r59
100 % r59
100 ) r59
100 * r59
100 + r59
100 , r59
100 - r59
100 / r59
100 ; r59
100 < r59
100 <= r59
100 == r59
100 > r59
100 >= r59
100 ] r59
100 ^ r59
101 ( s57
101 ; s46
101 ID s53
101 NUM s59
101 do s49
101 if s47
101 return s50
101 while s48
101 { s27
102 ( s57
102 ; s46
102 ID s53
102 NUM s59
102 do s49
102 if s47
102 return s50
102 while s48
102 { s27
103 ( s57
103 ID s53
103 NUM s59
104 != r40
104 % r40
104 ) r40
104 * r40
104 + r40
104 , r40
104 - r40
104 / r40
104 ; r40
104 < r40
104 <= r40
104 = r40
104 == r40
104 > r40
104 >= r40
104 ] r40
104 ^ r40
105 != r63
105 % r63
105 ) r63
105 * r63
105 + r63
105 , r63
105 - r63
105 / r63
105 ; r63
105 < r63
105 <= r63
105 == r63
105 > r63
105 >= r63
105 ] r63
105 ^ r63
106 ( s57
106 ID s53
106 NUM s59
107 ( r31
107 ; r31
107 ID r31
107 NUM r31
107 do r31
107 else s111
107 if r31
107 return r31
107 while r31
107 { r31
107 } r31
108 ( r33
108 ; r33
108 ID r33
108 NUM r33
108 do r33
108 else r33
108 if r33
108 return r33
108 while r33
108 { r33
108 } r33
109 ) s112
110 ) r66
110 , r66
111 ( s57
111 ; s46
111 ID s53
111 NUM s59
111 do s49
111 if s47
111 return s50
111 while s48
111 { s27
112 ; s114
113 ( r32
113 ; r32
113 ID r32
113 NUM r32
113 do r32
113 else r32
113 if r32
113 return r32
113 while r32
113 { r32
113 } r32
114 ( r34
114 ; r34
114 ID r34
114 NUM r34
114 do r34
114 else r34
114 if r34
114 return r34
114 while r34
114 { r34
114 } r34
0 definition 2
0 definition-list 1
0 function-definition 4
0 type-indicator 5
0 variable-definition 3
1 definition 10
1 function-definition 4
1 type-indicator 5
1 variable-definition 3
14 parameter 19
14 parameter-list 17
14 parameters 16
14 type-indicator 20
22 compound-stmt 26
23 parameter 28
23 type-indicator 20
27 local-definitions 30
30 statement-list 33
30 type-indicator 36
30 variable-definition 34
33 additive-expression 54
33 call 58
33 compound-stmt 40
33 condition-stmt 41
33 dowhile-stmt 43
33 expression 45
33 expression-stmt 39
33 factor 56
33 return-stmt 44
33 simple-expression 52
33 statement 38
33 term 55
33 variable 51
33 while-stmt 42
49 additive-expression 54
49 call 58
49 compound-stmt 40
49 condition-stmt 41
49 dowhile-stmt 43
49 expression 45
49 expression-stmt 39
49 factor 56
49 return-stmt 44
49 simple-expression 52
49 statement 64
49 term 55
49 variable 51
49 while-stmt 42
50 additive-expression 54
50 call 58
50 expression 66
50 factor 56
50 simple-expression 52
50 term 55
50 variable 51
54 addop 71
54 relop 70
55 mulop 80
57 additive-expression 54
57 call 58
57 expression 85
57 factor 56
57 simple-expression 52
57 term 55
57 variable 51
62 additive-expression 54
62 call 58
62 expression 86
62 factor 56
62 simple-expression 52
62 term 55
62 variable 51
63 additive-expression 54
63 call 58
63 expression 87
63 factor 56
63 simple-expression 52
63 term 55
63 variable 51
67 additive-expression 54
67 call 58
67 expression 90
67 factor 56
67 simple-expression 52
67 term 55
67 variable 51
68 additive-expression 54
68 call 58
68 expression 91
68 factor 56
68 simple-expression 52
68 term 55
68 variable 51
69 additive-expression 54
69 argument-list 93
69 arguments 92
69 call 58
69 expression 95
69 factor 56
69 simple-expression 52
69 term 55
69 variable 51
70 additive-expression 96
70 call 58
70 factor 56
70 term 55
70 variable 97
71 call 58
71 factor 56
71 term 98
71 variable 97
80 call 58
80 factor 99
80 variable 97
96 addop 71
98 mulop 80
101 additive-expression 54
101 call 58
101 compound-stmt 40
101 condition-stmt 41
101 dowhile-stmt 43
101 expression 45
101 expression-stmt 39
101 factor 56
101 return-stmt 44
101 simple-expression 52
101 statement 107
101 term 55
101 variable 51
101 while-stmt 42
102 additive-expression 54
102 call 58
102 compound-stmt 40
102 condition-stmt 41
102 dowhile-stmt 43
102 expression 45
102 expression-stmt 39
102 factor 56
102 return-stmt 44
102 simple-expression 52
102 statement 108
102 term 55
102 variable 51
102 while-stmt 42
103 additive-expression 54
103 call 58
103 expression 109
103 factor 56
103 simple-expression 52
103 term 55
103 variable 51
106 additive-expression 54
106 call 58
106 expression 110
106 factor 56
106 simple-expression 52
106 term 55
106 variable 51
111 additive-expression 54
111 call 58
111 compound-stmt 40
111 condition-stmt 41
111 dowhile-stmt 43
111 expression 45
111 expression-stmt 39
111 factor 56
111 return-stmt 44
111 simple-expression 52
111 statement 113
111 term 55
111 variable 51
111 while-stmt 42
